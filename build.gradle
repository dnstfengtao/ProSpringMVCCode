apply plugin: 'base'

ext.webProjects = subprojects.findAll { project -> project.name.endsWith('bookstore') }

// Version configuration
ext.springVersion = '4.1.4.RELEASE'
ext.hibernateVersion = '4.1.3.Final'
ext.hibernateValidatorVersion = '5.2.2.Final'

ext.tilesVersion = '2.2.2'
ext.tomcatVersion = '7.0.42'
ext.cargoVersion = '1.3.3'

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://repo1.maven.org/maven2/"
        }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5'
    }
}

subprojects() {
    apply plugin: 'java'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    dependencies {
        compile "org.apache.commons:commons-lang3:3.3"
        compile "commons-codec:commons-codec:1.10"
        compile "ch.qos.logback:logback-classic:1.1.3"

        compile 'com.h2database:h2:1.4.190'

        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.springframework:spring-aop:$springVersion"
        compile "org.springframework:spring-orm:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"

        compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
        compile "org.hibernate:hibernate-core:$hibernateVersion"
        compile "org.hibernate:hibernate-ehcache:$hibernateVersion"
        compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"

        compile "javax.servlet:javax.servlet-api:3.0.1"
        compile "javax.servlet:jstl:1.2"

        testCompile 'junit:junit:4.11'
        testCompile "org.springframework:spring-test:$springVersion"
    }
}

configure(webProjects) {
    apply plugin: 'war'
    apply plugin: 'jetty'
    apply plugin: 'tomcat'
    apply plugin: 'cargo'

    dependencies() {
        compile project(':bookstore-shared'), project(':bookstore-web-resources')

        compile "org.apache.tiles:tiles-servlet:$tilesVersion"
        compile "org.apache.tiles:tiles-jsp:$tilesVersion"
        compile "org.apache.tiles:tiles-api:$tilesVersion"
        compile "org.apache.tiles:tiles-core:$tilesVersion"

        runtime "jstl:jstl:1.2"

        providedCompile 'javax.servlet:javax.servlet-api:3.0.1'

        tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
                "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
        tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
            exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'

            cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
                    "org.codehaus.cargo:cargo-ant:${cargoVersion}"
        }
    }

    cargo {
        containerId = 'tomcat8x'
        port = 8080

        local {
            homeDir = file('/opt/apache/apache-tomcat-8.0.27')
        }
    }

    war {
        version = ''
        //We do this to make the wars versionless, when they are deployed with cargo, the context
        //root of the app is equal to the file name, which is equal to the sample directory name.
    }

    task systemTest(type: Test) {
        include '**/*FrontendTest.*'
        dependsOn(war)

        doFirst {
            cargoStartLocal.execute()
        }
    }

    test {
        exclude '**/*FrontendTest.*'
    }

}

